# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  dependencies-analysis:
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: "snyk/actions/gradle-jdk${{ vars.JAVA_VERSION }}@master"
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ vars.JAVA_VERSION }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ vars.JAVA_VERSION }}
        distribution: 'corretto'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v1
      with:
        arguments: build
        
  code-security:
     runs-on: ubuntu-latest
     environment:
       name: development
     steps:
       - uses: actions/checkout@master
       - name: Run Snyk to check for vulnerabilities
         uses: "snyk/actions/gradle-jdk${{ vars.JAVA_VERSION }}@master"
         env:
           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
         with:
           command: code test
